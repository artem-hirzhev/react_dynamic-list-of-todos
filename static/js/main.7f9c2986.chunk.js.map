{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","types/Filter.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","filter","setFilter","setQuery","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Filter","Loader","TodoModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","loading","setLoading","visibleTodos","arrOfTodos","filterType","queryValue","queryResult","toLowerCase","includes","trim","completedTodos","activeTodos","all","active","Error","handleFilter","result","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7f9c2986.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    selectedTodo,\n    setSelectedTodo,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light':\n                selectedTodo && selectedTodo.id === todo.id,\n            },\n          )}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                {\n                  'has-text-success': todo.completed,\n                  'has-text-danger': !todo.completed,\n                },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => setSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={\n                    selectedTodo && selectedTodo.id === todo.id\n                      ? 'far fa-eye-slash'\n                      : 'far fa-eye'\n                  }\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\n\ntype Props = {\n  query: string,\n  filter: string,\n  setFilter: (value: string) => void,\n  setQuery: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    query,\n    filter,\n    setFilter,\n    setQuery,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={filter}\n          onChange={e => setFilter(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Filter {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (arg: null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    selectedTodo,\n    setSelectedTodo,\n  },\n) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(selectedTodo.userId).then(setUser);\n  });\n\n  return (\n    <div\n      data-cy=\"modal\"\n      className=\"modal is-active\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? (\n                  <strong className=\"has-text-success\">\n                    Done\n                  </strong>\n                ) : (\n                  <strong className=\"has-text-danger\">\n                    Planned\n                  </strong>\n                )}\n\n              {' by '}\n\n              <a href={user.email}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [query, setQuery] = useState('');\n\n  const handleFilter = (\n    arrOfTodos: Todo[],\n    filterType: string,\n    queryValue: string,\n  ) => {\n    const queryResult = arrOfTodos.filter(\n      todo => todo.title.toLowerCase().includes(\n        queryValue.trim().toLowerCase(),\n      ),\n    );\n    const completedTodos = queryResult.filter(todo => todo.completed);\n    const activeTodos = queryResult.filter(todo => !todo.completed);\n\n    switch (filterType) {\n      case Filter.all:\n        return !queryResult ? arrOfTodos : queryResult;\n\n      case Filter.active:\n        return activeTodos;\n\n      case Filter.completed:\n        return completedTodos;\n\n      default:\n        throw new Error('Wrong filter type');\n    }\n  };\n\n  const visibleTodos = handleFilter(todos, filter, query);\n\n  useEffect(() => {\n    setLoading(true);\n\n    getTodos().then(result => {\n      setTodos(result);\n      setLoading(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                query={query}\n                setFilter={setFilter}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n              <TodoList\n                todos={visibleTodos}\n                selectedTodo={selectedTodo}\n                setSelectedTodo={setSelectedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}